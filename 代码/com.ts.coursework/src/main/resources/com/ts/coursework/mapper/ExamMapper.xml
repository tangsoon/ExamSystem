<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ts.coursework.mapper.ExamMapper">
	
	<resultMap id="ExamMap" type="com.ts.coursework.entity.Exam">
		<id column="id" property="id"/>
        <result column="exam_paper_id" property="examPaperId"/>
        <result column="subject_id" property="subjectId"/>
        <result column="start_time" property="startTime"/>
        <result column="end_time" property="endTime"/>
        <result column="duration" property="duration"/>
        <result column="title" property="title"/>
        <result column="course_id" property="courseId"/>
         <result column="subject_name" property="subjectName"/>
          <result column="exam_paper_name" property="examPaperName"/>
           <result column="course_name" property="courseName"/>
           <result column="user_name" property="userName"/>
	</resultMap>
	
	<insert id="add" useGeneratedKeys="true" keyProperty="id">
    	insert into exam(id,exam_paper_id,subject_id,start_time,end_time,duration,title,course_id,user_id) 
		values(id,#{examPaperId},#{subjectId},#{startTime},#{endTime},#{duration},#{title},#{courseId},#{userId})
    </insert>
    
    <delete id="del">
    	DELETE from exam
		where id=#{id}
    </delete>
    
    <update id="update">
    	update exam SET
		id=#{id},
		exam_paper_id=#{examPaperId},
		subject_id=#{subjectId},
		start_time=#{startTime},
		end_time=#{endTime},
		duration=#{duration},
		title=#{title},
		course_id=#{courseId}
		where id=#{id}
    </update>
    
    <select id="get" resultMap="ExamMap">
         SELECT  exam.id,exam.exam_paper_id,exam.subject_id,exam.start_time,exam.end_time,exam.duration,exam.title,`subject`.name subject_name,exam_paper.title exam_paper_name,course.`name` course_name,exam.user_id,`user`.`name` user_name,course.id course_id
		from exam,subject,exam_paper,course,`user`
		where  exam.subject_id=`subject`.id and exam.exam_paper_id=exam_paper.id and exam.course_id=course.id and exam.user_id=user.id and exam.id=#{id}
    </select>
    
    <select id="getAll" resultMap="ExamMap">
        SELECT  exam.id,exam.exam_paper_id,exam.subject_id,exam.start_time,exam.end_time,exam.duration,exam.title,`subject`.name subject_name,exam_paper.title exam_paper_name,course.`name` course_name,exam.user_id,`user`.`name` user_name,course.id course_id
		from exam,subject,exam_paper,course,`user`
		where  exam.subject_id=`subject`.id and exam.exam_paper_id=exam_paper.id and exam.course_id=course.id and exam.user_id=user.id
    </select>
    
    <select id="getBySubjectId" resultMap="ExamMap">
		SELECT  exam.id,exam.exam_paper_id,exam.subject_id,exam.start_time,exam.end_time,exam.duration,exam.title,`subject`.name subject_name,exam_paper.title exam_paper_name,course.`name` course_name,exam.user_id,`user`.`name` user_name,course.id course_id
		from exam,subject,exam_paper,course,`user`
		where  exam.subject_id=`subject`.id and exam.exam_paper_id=exam_paper.id and exam.course_id=course.id and exam.user_id=user.id and subject.id=#{subjectId}
    </select>
    
    <select id="getExamsByUserId" resultMap="ExamMap">
       	SELECT  exam.id,exam.exam_paper_id,exam.subject_id,exam.start_time,exam.end_time,exam.duration,exam.title,`subject`.name subject_name,exam_paper.title exam_paper_name,course.`name` course_name,exam.user_id,`user`.`name` user_name,course.id course_id
		from exam,subject,exam_paper,course,`user`
		where  exam.subject_id=`subject`.id and exam.exam_paper_id=exam_paper.id and exam.course_id=course.id and exam.user_id=user.id and `user`.id=#{userId}
    </select>
    
</mapper>